{"version":3,"sources":["components/common.js","components/PoetryPage.js","components/poetry.js","components/ProjectsPage.js","components/projects.js","components/ContactPage.js","components/contact.js","App.js","index.js"],"names":["parseFirstLink","line","elementStack","indexOf","b1","b2","p1","p2","before","slice","label","url","after","length","concat","push","href","parseMdText","inputText","split","forEach","PoetryPage","className","ProjectsPage","ContactPage","App","to","path","ReactDOM","render","document","getElementById"],"mappings":"sOAEaA,EAAiB,SAACC,GAC7B,IAAMC,EAAe,GACrB,IAA2B,IAAvBD,EAAKE,QAAQ,KAAa,CAC5B,IAAMC,EAAKH,EAAKE,QAAQ,KAClBE,EAAKJ,EAAKE,QAAQ,KAClBG,EAAKL,EAAKE,QAAQ,KAClBI,EAAKN,EAAKE,QAAQ,KACxB,GAAIC,EAAKC,GAAMA,EAAKC,GAAMA,EAAKC,EAAI,CACjC,IAAMC,EAASP,EAAKQ,MAAM,EAAGL,GACvBM,EAAQT,EAAKQ,MAAML,EAAK,EAAGC,GAC3BM,EAAMV,EAAKQ,MAAMH,EAAK,EAAGC,GACzBK,EAAQX,EAAKQ,MAAMF,EAAK,EAAGN,EAAKY,QAAQC,OAAO,MACjDN,EAAOK,OAAS,GAAGX,EAAaa,KAAKP,GACzCN,EAAaa,KAAK,uBAAGC,KAAML,GAAOD,IAC9BE,EAAMC,OAAS,GAAGX,EAAaa,KAAKH,SAG1CV,EAAaa,KAAKd,GAEpB,OAAOC,GAGIe,EAAc,SAACC,GAC1B,IAAMhB,EAAe,GAerB,OAdcgB,EAAUC,MAAM,MACxBC,SAAQ,SAACnB,GACc,IAAvBA,EAAKE,QAAQ,MACfD,EAAaa,KAAK,4BAAMf,EAAeC,EAAKQ,MAAM,MACjB,IAAxBR,EAAKE,QAAQ,OACtBD,EAAaa,KAAK,4BAAMf,EAAeC,EAAKQ,MAAM,MACzB,IAAhBR,EAAKY,OACdX,EAAaa,KAAK,8BACe,IAAxBd,EAAKE,QAAQ,OACtBD,EAAaa,KAAK,8BAElBb,EAAaa,KAAKf,EAAeC,EAAKa,OAAO,WAG1CZ,GC5BMmB,EARI,kBACjB,yBAAKC,UAAU,iBACb,yBAAKA,UAAU,eACXL,ECPW,2gDCYJM,EARM,kBACnB,yBAAKD,UAAU,iBACb,yBAAKA,UAAU,eACXL,ECPa,igBCYNO,EARK,kBAClB,yBAAKF,UAAU,iBACb,yBAAKA,UAAU,eACXL,ECPY,wGC4CLQ,EAjCH,kBACV,kBAAC,IAAD,KACE,yBAAKH,UAAU,UACb,yBAAKA,UAAU,iBACb,+CACA,6BACE,4BACE,kBAAC,IAAD,CAAMI,GAAG,WAAT,UACA,qCACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,qCACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,eAKR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UCjCRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.363f6d61.chunk.js","sourcesContent":["import React from 'react';\n\nexport const parseFirstLink = (line) => {\n  const elementStack = [];\n  if (line.indexOf('[') !== -1) {\n    const b1 = line.indexOf('[');\n    const b2 = line.indexOf(']');\n    const p1 = line.indexOf('(');\n    const p2 = line.indexOf(')');\n    if (b1 < b2 && b2 < p1 && p1 < p2) {\n      const before = line.slice(0, b1);\n      const label = line.slice(b1 + 1, b2);\n      const url = line.slice(p1 + 1, p2);\n      const after = line.slice(p2 + 1, line.length).concat('\\n');\n      if (before.length > 0) elementStack.push(before);\n      elementStack.push(<a href={url}>{ label }</a>);\n      if (after.length > 0) elementStack.push(after);\n    }\n  } else {\n    elementStack.push(line);\n  }\n  return elementStack;\n}\n\nexport const parseMdText = (inputText) => {\n  const elementStack = [];\n  const lines = inputText.split('\\n');\n  lines.forEach((line) => {\n    if (line.indexOf('# ') === 0) {\n      elementStack.push(<h1>{ parseFirstLink(line.slice(2)) }</h1>)\n    } else if (line.indexOf('## ') === 0) {\n      elementStack.push(<h3>{ parseFirstLink(line.slice(3)) }</h3>)\n    } else if (line.length === 0) {\n      elementStack.push(<br/>)\n    } else if (line.indexOf('---') === 0) {\n      elementStack.push(<hr/>)\n    } else {\n      elementStack.push(parseFirstLink(line.concat('\\n')));\n    }\n  });\n  return elementStack;\n};","import React from 'react';\nimport { poetry } from './poetry';\nimport { parseMdText } from './common';\n\nconst PoetryPage = () => (\n  <div className=\"center-column\">\n    <div className=\"text-column\">\n      { parseMdText(poetry) }\n    </div>\n  </div>\n);\n\nexport default PoetryPage;\n","export const poetry = (\n`# Poems for November\n\n---\n\n## Aswan\n\nCome with me on this doomed escape\nThe dance whose steps reverse primal currents\n\nLet's go down south of Aswan\nWhere the hourglass turns\nAnd swim upstream to the heart\nOf twin mysteries, blue and white,\nPast the elephantine corridor nilometer\nPast the lost ruins of the Aswan well\nWhose sleeping eye marked divine boundaries\nWhose spirit haunts an imaginary line\nYearning to return to a caved-in home\nLost beyond the reach of memory\nLet's get lost at the end of the world\nOnly the lost know it when they see it\n\nThe first time you blew out a dandelion\nDid you think you could take it back?\n\n---\n\n## Untitled\n\nWho am I to understand\nEver unmoved by envelopes\nWhat this one could mean to you\nYou may know what's inside\nOr it's a total surprise\nI'll measure by the lights in your eyes\nYou'll cast lines in the sea to ponder\nI'll gather shells on the shore in wonder\nSlender shafts of sunset gently pierce\nYour impeccably practiced disguise\nIt seems you couldn't have it otherwise\n\n---\n\n## Waves\n\nThe waves tell the shore\nLet me try again\n\nAnd the shore waits\nListening to the loving sounds\nTraced on her open palm\nIn papillary lines\n\nThe sound of one wing\nBeating on a misty wind\nThe whisper of a steady hand\nSmoothing skirts of golden sand\n\nWaves bear gifts to the shore\nWho picks them up and says no more\nWaves boil and rage in war\nStern beaches echo back their roar\n\nI'll try again, sigh sun-bright sheets\nMelting away beneath our feet\n\n`\n);\n","import React from 'react';\nimport { projects } from './projects';\nimport { parseMdText } from './common';\n\nconst ProjectsPage = () => (\n  <div className=\"center-column\">\n    <div className=\"text-column\">\n      { parseMdText(projects) }\n    </div>\n  </div>\n);\n\nexport default ProjectsPage;\n","export const projects = (\n`## [OSSP Bot](https://twitter.com/osspbot)\nFacebook scraping, meme recombinating twitter bot full of One Sentence Startup Pitch ideas.\n\n## [Rainforest Trail](http://jantabaczynski.com/rain)\nOnline jungle survival game. Made with HTML5 Canvas, Redux, and Java using the WebSockets protocol.\n\n## [Let's Chat](http://jantabaczynski.com/chat)\nSingle-page chat site that uses the fetch library to store all messages on jsonstore.io. Made with React, Redux, Webpack and jsonstore.io by Eliran Pe'er\",\n\n`\n);\n","import React from 'react';\nimport { contact } from './contact';\nimport { parseMdText } from './common';\n\nconst ContactPage = () => (\n  <div className=\"center-column\">\n    <div className=\"text-column\">\n      { parseMdText(contact) }\n    </div>\n  </div>\n);\n\nexport default ContactPage;","export const contact = (\n`## [github](https://github.com/borrascador)\n## [twitter](https://twitter.com/jantabaczynski)\n\n`\n);\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport PoetryPage from './components/PoetryPage.js';\nimport ProjectsPage from './components/ProjectsPage.js';\nimport ContactPage from './components/ContactPage.js';\n\nconst App = () => (\n  <Router>\n    <div className=\"header\">\n      <div className=\"center-column\">\n        <h1>Jan Tabaczynski</h1>\n        <nav>\n          <h2>\n            <Link to=\"/poetry\">poetry</Link>\n            <span> * </span>\n            <Link to=\"/projects\">projects</Link>\n            <span> * </span>\n            <Link to=\"/contact\">contact</Link>\n          </h2>\n        </nav>\n      </div>\n    </div>\n    <Switch>\n      <Route path=\"/poetry\">\n        <PoetryPage />\n      </Route>\n      <Route path=\"/projects\">\n        <ProjectsPage />\n      </Route>\n      <Route path=\"/contact\">\n        <ContactPage />\n      </Route>\n      <Route path=\"/\">\n        <PoetryPage />\n      </Route>\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}